#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include "keys_fi.h"
#include <input/processors.dtsi>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <30>;
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";

// -----------------------------------------------------------------------------------------
// | TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  Å   |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Ö  |  Ä   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  -  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | BSPC | RSE |
                        bindings = <
   &kp TAB   &kp FI_Q &kp FI_W &kp FI_E &kp FI_R &kp FI_T    &kp FI_Y &kp FI_U  &kp FI_I     &kp FI_O      &kp FI_P        &kp FI_A_RING
   &kp LCTRL &kp FI_A &kp FI_S &kp FI_D &kp FI_F &kp FI_G    &kp FI_H &kp FI_J  &kp FI_K     &kp FI_L      &kp FI_O_UMLAUT &kp FI_A_UMLAUT
   &kp LSHFT &kp FI_Z &kp FI_X &kp FI_C &kp FI_V &kp FI_B    &kp FI_N &kp FI_M  &kp FI_COMMA &kp FI_PERIOD &kp FI_MINUS    &mt RALT ESC 
                               &kp LGUI &mo 1    &kp SPACE   &kp RET  &kp BSPC  &mo 2
                        >;
                };
                lower_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// |   ^   | CTRL+A |  UP  | CTRL+E |    {    |    }    |   |  !  |  %  |  "  |  '  |  |  |   #  |
// | BTCLR |  LEFT  | DOWN |  RIGHT |    (    |    )    |   |  ?  |  =  |  /  |  @  |  *  |   $  |
// |  SHFT |    <   |  >   |    ~   |    [    |    ]    |   |  `  |  +  |  \  |  &  |  €  |  ALT |
//                         |   GUI  |         |   SPC   |   | ENT |     | RSE |
                        bindings = <
   &kp FI_CARET &kp LC(A)        &kp UP              &kp LC(E)    &kp FI_LEFT_BRACE       &kp FI_RIGHT_BRACE         &kp FI_EXCLAMATION &kp FI_PERCENT &kp FI_DOUBLE_QUOTES &kp FI_SINGLE_QUOTE &kp FI_PIPE     &kp FI_HASH
   &kp LCTRL    &kp LEFT         &kp DOWN            &kp RIGHT    &kp FI_LEFT_PARENTHESIS &kp FI_RIGHT_PARENTHESIS   &kp FI_QUESTION    &kp FI_EQUAL   &kp FI_SLASH         &kp FI_AT_SIGN      &kp FI_ASTERISK &kp FI_DOLLAR
   &kp LSHFT    &kp FI_LESS_THAN &kp FI_GREATER_THAN &kp FI_TILDE &kp FI_LEFT_BRACKET     &kp FI_RIGHT_BRACKET       &kp FI_GRAVE       &kp FI_PLUS    &kp FI_BACKSLASH     &kp FI_AMPERSAND    &kp FI_EURO     &kp LALT
                                                     &kp LGUI     &trans                  &kp SPACE                  &kp RET            &trans         &trans
                        >;
                };

                raise_layer {
                        label = "NUMBER";
// -----------------------------------------------------------------------------------------
// |     |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
// |     | BTC | BT1 | BT2 | BT3 |     |   |     |     |     |     |     |     |
//                   | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &kp FI_N1  &kp FI_N2    &kp FI_N3    &kp FI_N4    &kp FI_N5   &kp FI_N6 &kp FI_N7  &kp FI_N8 &kp FI_N9 &kp FI_N0 &trans
   &trans &trans     &trans       &trans       &trans       &trans      &trans    &trans     &trans    &trans    &trans    &trans
   &trans &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans      &trans    &trans     &trans    &trans    &trans    &trans
                                  &kp LGUI     &trans       &kp SPACE   &kp RET   &kp BSPC   &mo 2
                        >;
                };
        };
};
